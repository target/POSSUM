plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'application'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'de.undercouch.download' version '5.6.0'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '3.1.0'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

application {
    mainClassName = 'com.target.devicemanager.DeviceMain'
}

group 'com.target'
version '1.0'

sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:3.4.4"
    implementation "org.springframework.boot:spring-boot-starter-actuator:3.4.4"
    implementation "org.springframework.boot:spring-boot-starter-validation:3.4.4"
    implementation "org.springframework.boot:spring-boot-loader:3.4.4"
    implementation "org.springframework:spring-webmvc:6.2.5"
    implementation "org.springframework:spring-web:6.2.5"
    implementation "org.junit.platform:junit-platform-launcher:1.12.1"
    implementation "org.junit.platform:junit-platform-commons:1.12.1"
    implementation "org.junit.platform:junit-platform-engine:1.12.1"
    implementation "io.micrometer:micrometer-registry-influx:1.14.5"
    implementation "org.javapos:javapos-config-loader:4.0.1"
    implementation "org.javapos:javapos:1.14.4"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.18.3"
    implementation "com.fasterxml.jackson.core:jackson-core:2.18.3"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.18.3"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.3"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.18.3"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:2.18.3"
    implementation "jakarta.servlet:jakarta.servlet-api:6.1.0"
    implementation "jakarta.validation:jakarta.validation-api:3.1.1"
    implementation "jakarta.annotation:jakarta.annotation-api:3.0.0"
    implementation "org.apache.logging.log4j:log4j-1.2-api:2.24.3"

    implementation "net.logstash.logback:logstash-logback-encoder:8.0"
    implementation "org.yaml:snakeyaml:2.4"

    implementation "org.springframework.boot:spring-boot-starter-cache:3.4.4"
    implementation "com.github.ben-manes.caffeine:caffeine:3.2.0"
    implementation "io.github.classgraph:classgraph:4.8.179"
    testImplementation "org.springframework.boot:spring-boot-starter-test:3.4.4"
}

tasks.withType(JavaExec){
    systemProperties System.properties
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging {
        events "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.12"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

build {
    dependsOn("copyRuntimeJars")
}

tasks.processResources {
    from(configurations.runtimeClasspath).include("*.jar")
}

ext['log4j2.version'] = '2.24.3'

shadowJar{
    archiveClassifier.set("")
}

bootJar {
    archiveClassifier.set("")
    manifest {
        attributes(
                'Main-Class': 'org.springframework.boot.loader.launch.PropertiesLauncher'
        )
    }
}

task generatePom {
    doLast {
        pom {
            project {
                licenses {
                    license {
                        name 'MIT'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                        distribution 'repo'
                        comments 'All source code is under the MIT license.'
                    }
                }
            }
        }.writeTo("$buildDir/pom/$archivesBaseName-$version"+".pom")
    }
}
